Index: app/src/main/java/com/example/ourapplication_kohl_roux_m/BaseApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ourapplication_kohl_roux_m;\r\n\r\nimport android.app.Application;\r\n\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.AppDataBase;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Car;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Repository.CarRepository;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Repository.TrajetRepository;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Trajet;\r\n\r\nimport ch.hevs.aislab.demo.database.AppDatabase;\r\nimport ch.hevs.aislab.demo.database.repository.AccountRepository;\r\nimport ch.hevs.aislab.demo.database.repository.ClientRepository;\r\n\r\n/**\r\n * Android Application class. Used for accessing singletons.\r\n */\r\npublic class BaseApp extends Application {\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n    }\r\n\r\n    public AppDataBase getDatabase() {\r\n        return AppDataBase.getInstance(this);\r\n    }\r\n\r\n    public Car getCar() {\r\n        return CarRepository.getInstance();\r\n    }\r\n\r\n    public Trajet getTrajet() {\r\n        return TrajetRepository.getInstance();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ourapplication_kohl_roux_m/BaseApp.java	(revision 0692e6dfea00c7fa72addc6dabc1635c2887a310)
+++ app/src/main/java/com/example/ourapplication_kohl_roux_m/BaseApp.java	(date 1604830271708)
@@ -3,14 +3,9 @@
 import android.app.Application;
 
 import com.example.ourapplication_kohl_roux_m.dbClass.AppDataBase;
-import com.example.ourapplication_kohl_roux_m.dbClass.Car;
 import com.example.ourapplication_kohl_roux_m.dbClass.Repository.CarRepository;
 import com.example.ourapplication_kohl_roux_m.dbClass.Repository.TrajetRepository;
-import com.example.ourapplication_kohl_roux_m.dbClass.Trajet;
 
-import ch.hevs.aislab.demo.database.AppDatabase;
-import ch.hevs.aislab.demo.database.repository.AccountRepository;
-import ch.hevs.aislab.demo.database.repository.ClientRepository;
 
 /**
  * Android Application class. Used for accessing singletons.
@@ -26,11 +21,11 @@
         return AppDataBase.getInstance(this);
     }
 
-    public Car getCar() {
+    public CarRepository getCarRepository(int id) {
         return CarRepository.getInstance();
     }
 
-    public Trajet getTrajet() {
+    public TrajetRepository getTrajetRepository() {
         return TrajetRepository.getInstance();
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/DbCarDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ourapplication_kohl_roux_m.dbClass;\r\n\r\nimport android.database.sqlite.SQLiteConstraintException;\r\n\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\n\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Car;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface DbCarDao {\r\n//    Car car = new Car();\r\n\r\n    @Query(\"SELECT * FROM car WHERE uid LIKE (:UID) LIMIT 1\")\r\n    Car getById(int UID);\r\n\r\n    @Query(\"SELECT * FROM car\")\r\n    List<Car> getAllCar();\r\n\r\n    @Query(\"SELECT * FROM car WHERE uid IN (:carIds)\")\r\n    List<Car> loadAllByIds(int[] carIds);\r\n\r\n    @Query(\"SELECT uid FROM car WHERE active = 1 \")\r\n    int getActive();\r\n\r\n    @Query(\"SELECT * FROM car WHERE Nickname LIKE (:name)\")\r\n    Car findByNickName(String name);\r\n\r\n    @Insert\r\n    void insert(Car car) throws SQLiteConstraintException;\r\n\r\n    @Query(\"DELETE FROM car\")\r\n    void deleteAll();\r\n\r\n    @Delete\r\n    void delete(Car car);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/DbCarDao.java	(revision 0692e6dfea00c7fa72addc6dabc1635c2887a310)
+++ app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/DbCarDao.java	(date 1604830271675)
@@ -2,6 +2,7 @@
 
 import android.database.sqlite.SQLiteConstraintException;
 
+import androidx.lifecycle.LiveData;
 import androidx.room.Dao;
 import androidx.room.Delete;
 import androidx.room.Insert;
@@ -15,12 +16,20 @@
 public interface DbCarDao {
 //    Car car = new Car();
 
-    @Query("SELECT * FROM car WHERE uid LIKE (:UID) LIMIT 1")
+    @Query("SELECT * FROM car WHERE uid LIKE (:id) LIMIT 1")
+    LiveData<Car> getById(int id);
+
+    @Query("SELECT * FROM car")
+    LiveData<List<Car>> getAll();
+
+/*    @Query("SELECT * FROM car WHERE uid LIKE (:UID) LIMIT 1")
     Car getById(int UID);
 
     @Query("SELECT * FROM car")
     List<Car> getAllCar();
 
+ */
+
     @Query("SELECT * FROM car WHERE uid IN (:carIds)")
     List<Car> loadAllByIds(int[] carIds);
 
Index: app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/DbTrajetDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ourapplication_kohl_roux_m.dbClass;\r\n\r\nimport android.database.sqlite.SQLiteConstraintException;\r\n\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface DbTrajetDao {\r\n//    Trajet trajet = new Trajet();\r\n\r\n    @Query(\"SELECT * FROM trajets\")\r\n    List<Trajet> getAllTrajets();\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Voiture_id LIKE :carId Limit 1\")\r\n    List<Trajet> getAllTrajetsByCar(String carId);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE uid IN (:trajetIds)\")\r\n    List<Trajet> loadAllByIds(int[] trajetIds);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE uid IN (:date)\")\r\n    List<Trajet> loadAllByDate(String[] date);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Nom_trajet LIKE (:name) LIMIT 1\")\r\n    Trajet findByName(String name);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Date LIKE (:date) LIMIT 1\")\r\n    Trajet findByDate(String date);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Distance LIKE :km LIMIT 1\")\r\n    Trajet findByKilometers(float km);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Denivellation_positif LIKE :rise LIMIT 1\")\r\n    Trajet findByRising(float rise);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Denivellation_positif <= :rise LIMIT 1\")\r\n    Trajet findByIntervalRising(float rise);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Denivellation_negatif LIKE :deep LIMIT 1\")\r\n    Trajet findByDeep(float deep);\r\n\r\n    @Query(\"SELECT * FROM trajets WHERE Denivellation_negatif LIKE :deep LIMIT 1\")\r\n    Trajet findByIntevalDeep(float deep);\r\n\r\n    @Insert\r\n    void insertAll(Trajet... trajets);\r\n\r\n    @Insert\r\n    void insert(Trajet trajet) throws SQLiteConstraintException;\r\n\r\n    @Update\r\n    public void update(Trajet trajets);\r\n\r\n    @Update\r\n    public void updateConsoGasolin(Trajet trajet);\r\n    @Update\r\n    public void updateConsoElectric(Trajet trajet);\r\n\r\n    @Delete\r\n    void delete(Trajet trajet);\r\n\r\n    @Query(\"DELETE FROM trajets\")\r\n    void deleteAll();\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/DbTrajetDao.java	(revision 0692e6dfea00c7fa72addc6dabc1635c2887a310)
+++ app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/DbTrajetDao.java	(date 1604830271660)
@@ -2,22 +2,34 @@
 
 import android.database.sqlite.SQLiteConstraintException;
 
+import androidx.lifecycle.LiveData;
 import androidx.room.Dao;
 import androidx.room.Delete;
 import androidx.room.Insert;
 import androidx.room.Query;
 import androidx.room.Update;
 
+import com.example.ourapplication_kohl_roux_m.dbClass.pojo.TrajetByThisCar;
+
 import java.util.List;
 
 @Dao
 public interface DbTrajetDao {
 //    Trajet trajet = new Trajet();
 
+    @Query("SELECT * FROM trajets WHERE Date = :date")
+    LiveData<List<Trajet>> getByDate(String date);
+
+    @Query("SELECT * FROM trajets WHERE Nom_trajet = :name")
+    /* LiveData<List<Trajet>> */ LiveData<TrajetByThisCar> getByName(String name);
+
+    @Query("SELECT * FROM trajets")
+    LiveData<List<Trajet>> getAll();
+
     @Query("SELECT * FROM trajets")
     List<Trajet> getAllTrajets();
 
-    @Query("SELECT * FROM trajets WHERE Voiture_id LIKE :carId Limit 1")
+    @Query("SELECT * FROM trajets WHERE Voiture_id = :carId Limit 1")
     List<Trajet> getAllTrajetsByCar(String carId);
 
     @Query("SELECT * FROM trajets WHERE uid IN (:trajetIds)")
Index: app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/Repository/TrajetRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ourapplication_kohl_roux_m.dbClass.Repository;\r\n\r\nimport android.app.Application;\r\n\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport com.example.ourapplication_kohl_roux_m.BaseApp;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Trajet;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.asynch.DeleteTrajet;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.asynch.UpdateTrajet;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.pojo.TrajetByThisCar;\r\nimport com.example.ourapplication_kohl_roux_m.util.OnAsyncEventListener;\r\n\r\nimport java.util.List;\r\n\r\npublic class TrajetRepository {\r\n\r\n    private static TrajetRepository instance;\r\n\r\n    private TrajetRepository() {\r\n    }\r\n\r\n    public static TrajetRepository getInstance() {\r\n        if (instance == null) {\r\n            synchronized (CarRepository.class) {\r\n                if (instance == null) {\r\n                    instance = new TrajetRepository();\r\n                }\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public LiveData<Trajet> getTrajet(final String date, Application application) {\r\n        return ((BaseApp) application).getDatabase().trajetDao().getByDate(date);\r\n    }\r\n\r\n    public LiveData<List<TrajetByThisCar>> getOtherTrajetByThisCar(final String date,\r\n                                                                   Application application) {\r\n        return ((BaseApp) application).getDatabase().trajetDao().getByName(date);\r\n    }\r\n\r\n    public void insert(final Trajet trajet, OnAsyncEventListener callback,\r\n                       Application application) {\r\ntrajet    }\r\n\r\n    public void update(final Trajet trajet, OnAsyncEventListener callback,\r\n                       Application application) {\r\n        new UpdateTrajet(application, callback).execute(trajet);\r\n    }\r\n\r\n    public void delete(final Trajet trajet, OnAsyncEventListener callback,\r\n                       Application application) {\r\n        new DeleteTrajet(application, callback).execute(trajet);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/Repository/TrajetRepository.java	(revision 0692e6dfea00c7fa72addc6dabc1635c2887a310)
+++ app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/Repository/TrajetRepository.java	(date 1604830271691)
@@ -6,6 +6,7 @@
 
 import com.example.ourapplication_kohl_roux_m.BaseApp;
 import com.example.ourapplication_kohl_roux_m.dbClass.Trajet;
+import com.example.ourapplication_kohl_roux_m.dbClass.asynch.CreateTrajet;
 import com.example.ourapplication_kohl_roux_m.dbClass.asynch.DeleteTrajet;
 import com.example.ourapplication_kohl_roux_m.dbClass.asynch.UpdateTrajet;
 import com.example.ourapplication_kohl_roux_m.dbClass.pojo.TrajetByThisCar;
@@ -31,18 +32,20 @@
         return instance;
     }
 
-    public LiveData<Trajet> getTrajet(final String date, Application application) {
+    public LiveData<List<Trajet>> getTrajetByDate(final String date,
+                                                                    Application application) {
         return ((BaseApp) application).getDatabase().trajetDao().getByDate(date);
     }
 
-    public LiveData<List<TrajetByThisCar>> getOtherTrajetByThisCar(final String date,
+    public LiveData<TrajetByThisCar> getTrajetByName(final String date,
                                                                    Application application) {
         return ((BaseApp) application).getDatabase().trajetDao().getByName(date);
     }
 
     public void insert(final Trajet trajet, OnAsyncEventListener callback,
                        Application application) {
-trajet    }
+        new CreateTrajet(application, callback).execute(trajet);
+    }
 
     public void update(final Trajet trajet, OnAsyncEventListener callback,
                        Application application) {
Index: app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/Repository/CarRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ourapplication_kohl_roux_m.dbClass.Repository;\r\n\r\nimport android.app.Application;\r\n\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport com.example.ourapplication_kohl_roux_m.BaseApp;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Car;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Trajet;\r\nimport com.example.ourapplication_kohl_roux_m.util.OnAsyncEventListener;\r\n\r\npublic class CarRepository {\r\n\r\n    private static CarRepository instance;\r\n\r\n    private CarRepository() {\r\n    }\r\n\r\n\r\n    public static CarRepository getInstance() {\r\n        if (instance == null) {\r\n  //          synchronized (AccountRepository.class) {\r\n                if (instance == null) {\r\n                    instance = new CarRepository();\r\n                }\r\n            }\r\n   //     }\r\n        return instance;\r\n    }\r\n\r\n\r\n\r\n    public LiveData<Car> getCar(final int carId, Application application) {\r\n        return ((BaseApp) application).getDatabase().carDao().getById(carId);\r\n    }\r\n\r\n/*    public LiveData<List<Trajet>> getOtherClientsWithAccounts(final String owner,\r\n                                                              Application application) {\r\n        return ((BaseApp) application).getDatabase().clientDao().getOtherClientsWithAccounts(owner);\r\n    }\r\n\r\n */\r\n\r\n    public void insert(final Car car, OnAsyncEventListener callback,\r\n                       Application application) {\r\n        new CreateCar(application, callback).execute(car);\r\n    }\r\n\r\n/*    public void update(final Car client, OnAsyncEventListener callback,\r\n                       Application application) {\r\n        new UpdateClient(application, callback).execute(client);\r\n    }\r\n\r\n */\r\n\r\n    public void delete(final Car car, OnAsyncEventListener callback,\r\n                       Application application) {\r\n        new DeleteCar(application, callback).execute(car);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/Repository/CarRepository.java	(revision 0692e6dfea00c7fa72addc6dabc1635c2887a310)
+++ app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/Repository/CarRepository.java	(date 1604830271675)
@@ -7,8 +7,12 @@
 import com.example.ourapplication_kohl_roux_m.BaseApp;
 import com.example.ourapplication_kohl_roux_m.dbClass.Car;
 import com.example.ourapplication_kohl_roux_m.dbClass.Trajet;
+import com.example.ourapplication_kohl_roux_m.dbClass.asynch.CreateCar;
+import com.example.ourapplication_kohl_roux_m.dbClass.asynch.DeleteCar;
 import com.example.ourapplication_kohl_roux_m.util.OnAsyncEventListener;
 
+import java.util.List;
+
 public class CarRepository {
 
     private static CarRepository instance;
@@ -19,27 +23,24 @@
 
     public static CarRepository getInstance() {
         if (instance == null) {
-  //          synchronized (AccountRepository.class) {
+            synchronized (CarRepository.class) {
                 if (instance == null) {
                     instance = new CarRepository();
                 }
             }
-   //     }
+        }
         return instance;
     }
 
-
-
     public LiveData<Car> getCar(final int carId, Application application) {
         return ((BaseApp) application).getDatabase().carDao().getById(carId);
     }
 
-/*    public LiveData<List<Trajet>> getOtherClientsWithAccounts(final String owner,
-                                                              Application application) {
-        return ((BaseApp) application).getDatabase().clientDao().getOtherClientsWithAccounts(owner);
+    public LiveData<List<Car>> getAllCar(Application application) {
+        return ((BaseApp) application).getDatabase().carDao().getAll();
     }
 
- */
+
 
     public void insert(final Car car, OnAsyncEventListener callback,
                        Application application) {
Index: app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/pojo/TrajetByThisCar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.ourapplication_kohl_roux_m.dbClass.pojo;\r\n\r\nimport androidx.room.Embedded;\r\nimport androidx.room.Relation;\r\n\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Car;\r\nimport com.example.ourapplication_kohl_roux_m.dbClass.Trajet;\r\n\r\nimport java.util.List;\r\n\r\npublic class TrajetByThisCar {\r\n    @Embedded\r\n    public Trajet trajet;\r\n\r\n    @Relation(parentColumn = \"email\", entityColumn = \"owner\", entity = Car.class)\r\n    public List<Car> carList;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/pojo/TrajetByThisCar.java	(revision 0692e6dfea00c7fa72addc6dabc1635c2887a310)
+++ app/src/main/java/com/example/ourapplication_kohl_roux_m/dbClass/pojo/TrajetByThisCar.java	(date 1604830271708)
@@ -12,6 +12,6 @@
     @Embedded
     public Trajet trajet;
 
-    @Relation(parentColumn = "email", entityColumn = "owner", entity = Car.class)
+    @Relation(parentColumn = "uid", entityColumn = "Voiture_id", entity = Car.class)
     public List<Car> carList;
 }
